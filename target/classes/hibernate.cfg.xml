<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC
		"-//Hibernate/Hibernate Configuration DTD 3.0//EN"
		"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
	<session-factory>

		<property name="hibernate.connection.driver_class">com.mysql.cj.jdbc.Driver</property>
		<property name="connection.url">jdbc:mysql://localhost:3306/test_db</property>
		<property name="connection.username">root</property>
		<property name="connection.password">1234</property>
		<property name="hibernate.dialect">org.hibernate.dialect.MySQL8Dialect</property>

		<!--  validate, update, create, create-drop dan biri secilir-->
		<!--  create: uygulama her calistiginda tablolar yeniden olusur-->
		<!--  create-drop: uygulama her calistiginda tablolar yeniden olusur, kapandiginda silinir-->
		<!--  validate: db da bir degisiklik yapmaz, semanin validate mi diye kontrol eder -->
		<!--  update: class larda yapilan degisiklige gore tablolari update eder, kapandiginda silmez -->
		<property name="hbm2ddl.auto">update</property>
		<property name="show_sql">true</property>
		<property name="format_sql">true</property>
		
		<!--  

		//hibernate.cfg.xml içinde mapping class ile eklenmişseaşağıdaki satıra ihtiyaç yok.
		//ikisinden biri kullanılabilir.
		//con.addAnnotatedClass(Student03.class).addAnnotatedClass(Diary.class);
		
		
		<mapping class="com.hb03.onetoone.Student03"/>
        <mapping class="com.hb03.onetoone.Diary"/> 
        
        -->
        <!-- 1: second level cache active et  -->
        <property name="hibernate.cache.use_second_level_cache">true</property>
        <!-- 2: ilgili dependency icinden class ismini aldik, kullanacagimiz region icin  -->         
        <property name="hibernate.cache.region.factory_class">org.hibernate.cache.jcache.internal.JCacheRegionFactory</property>
		
		
		

	</session-factory>
</hibernate-configuration>